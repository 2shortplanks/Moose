
=pod

=head1 NAME

Moose::Cookbook - How to cook a Moose

=head1 DESCRIPTION

The Moose cookbook is a series of recipes taken from the Moose 
test suite. Each recipe presents some code, which demonstrates 
some of the features of Moose, and then proceeds to explain the 
details of the code. 

We also provide a L<Moose::Cookbook::FAQ> and a L<Moose::Cookbook::WTF>
for common questions and problems people have with Moose. 

=head1 RECIPES

=head2 Basic Moose

=over 4

=item L<Moose::Cookbook::Recipe1> - The (always classic) B<Point> example

=item L<Moose::Cookbook::Recipe2> - A simple B<BankAccount> example

=item L<Moose::Cookbook::Recipe3> - A lazy B<BinaryTree> example

=item L<Moose::Cookbook::Recipe4> - Subtypes, and modeling a simple B<Company> class hierarchy

=item L<Moose::Cookbook::Recipe5> - More subtypes, coercion in a B<Request> class

=item L<Moose::Cookbook::Recipe6> - The augment/inner example

=item L<Moose::Cookbook::Recipe7> - Making Moose fast with immutable (TODO)

=item L<Moose::Cookbook::Recipe8> - ??

=item L<Moose::Cookbook::Recipe9> - ?? 

=back

=head2 Moose Roles

=over 4

=item L<Moose::Cookbook::Recipe10> - The Moose::Role example

=item L<Moose::Cookbook::Recipe11> - Advanced Role Composition (TODO)

=item L<Moose::Cookbook::Recipe12> - Runtime Role Composition (TODO)

=back

=head2 Meta Moose

=over 4

=item L<Moose::Cookbook::Recipe20> - Welcome to the meta-world (TODO)

=item L<Moose::Cookbook::Recipe21> - The meta-attribute example

=item L<Moose::Cookbook::Recipe22> - The meta-attribute trait example (TODO)

=item L<Moose::Cookbook::Recipe23> - The meta-instance example (TODO)

=item L<Moose::Cookbook::Recipe24> - The meta-class example (TODO)

=back

=head1 SEE ALSO

=over 4

=item L<http://www.gsph.com/index.php?Lang=En&ID=291>

=back

=head1 AUTHOR

Stevan Little E<lt>stevan@iinteractive.comE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright 2006-2008 by Infinity Interactive, Inc.

L<http://www.iinteractive.com>

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut